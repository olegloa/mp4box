
<!-- ==============================================================
      SVG12-RNG | Datatypes
     ============================================================== -->

<grammar ns='http://www.w3.org/2000/svg'
         xml:lang='en'
         xmlns='http://relaxng.org/ns/structure/1.0'
         xmlns:a='http://relaxng.org/ns/compatibility/annotations/1.0'
         xmlns:svg='http://www.w3.org/2005/02/svg-annotations'
         datatypeLibrary='http://www.w3.org/2001/XMLSchema-datatypes'
         >

  <define name='Boolean.datatype'>
    <choice>
      <value>false</value>
      <value>true</value>
    </choice>
  </define>

  <define name='ClipFillRule.datatype'>
    <choice>
      <value>nonzero</value>
      <value>evenodd</value>
    </choice>
  </define>

  <define name='ContentType.datatype'>
    <data type='string'/>
  </define>

  <define name='Coordinate.datatype'>
    <data type='string'/>
  </define>

  <define name='Coordinates.datatype'>
    <data type='string'/>
  </define>

  <define name='Color.datatype'>
    <data type='string'/>
  </define>

  <define name='Integer.datatype'>
    <data type='string'/>
  </define>

  <define name='LanguageCode.datatype'>
    <data type='language'/>
  </define>

  <define name='LanguageCodes.datatype'>
    <data type='string'/>
  </define>

  <define name='Length.datatype'>
    <data type='string'/>
  </define>

  <define name='Lengths.datatype'>
    <data type='string'/>
  </define>

  <define name='Number.datatype'>
    <data type='string'/>
  </define>

  <define name='Numbers.datatype'>
    <data type='string'/>
  </define>

  <define name='NumberOrPercentage.datatype'>
    <data type='string'/>
  </define>


  <define name='OpacityValue.datatype'>
    <data type='string'/>
  </define>

  <define name='PathData.datatype'>
    <data type='string'/>
  </define>

  <define name='PreserveAspectRatioSpec.datatype'>
    <data type='string'>
      <!--
      <param name='pattern'>\s*(none|xMidYMid)\s*(meet)?\s*</param>
      <param name='pattern'>\s*(none|xMinYMin|xMidYMin|xMaxYMin|xMinYMid|xMidYMid|xMaxYMid|xMinYMax|xMidYMax|xMaxYMax)\s*(meet|slice)?\s*</param>
      -->
    </data>
  </define>

  <define name='Script.datatype'>
    <data type='string'/>
  </define>

  <define name='SVGColor.datatype'>
    <data type='string'/>
  </define>

  <define name='Text.datatype'>
    <data type='string'/>
  </define>

  <define name='TransformList.datatype'>
    <data type='string'/>
  </define>

  <define name='IRI.datatype'>
    <!--<data type='anyURI'/>-->
    <data type='string'/>
  </define>

  <define name='ViewBoxSpec.datatype'>
    <data type='string'/>
  </define>

  <define name='Paint.datatype'                 ><data type='string'/></define>
  <define name='StrokeDashArrayValue.datatype'  ><data type='string'/></define>
  <define name='StrokeDashOffsetValue.datatype' ><data type='string'/></define>
  <define name='StrokeMiterLimitValue.datatype' ><data type='string'/></define>
  <define name='StrokeWidthValue.datatype'      ><data type='string'/></define>

  <define name='GradientOffset.datatype'>
    <ref name='Number.datatype'/>
  </define>

  <define name='ExtensionList.datatype'>
    <data type='string'/>
  </define>
  <define name='FeatureList.datatype'>
    <data type='string'/>
  </define>
  <define name='FormatList.datatype'>
    <data type='string'/>
  </define>
  <define name='FontList.datatype'>
    <data type='string'/>
  </define>
  <define name='LinkTarget.datatype'>
    <data type='NMTOKEN'/>
  </define>

  <define name='Focus.datatype'>
    <!--
    <choice>
      <value>auto</value>
      -->
      <data type='IDREF'/>
    <!--</choice>-->
  </define>

  <define name='FontFamilyValue.datatype'>
    <data type='string'/>
  </define>

  <define name='FontSizeValue.datatype'>
    <data type='string'/>
  </define>

  <define name='Points.datatype'>
    <data type='string'/>
  </define>


  <define name='ID.datatype'>
    <data type='ID'/>
  </define>

  <define name='XSLT-QName.datatype'>
    <choice>
      <data type='NMTOKEN'/>
      <data type='QName'/>
    </choice>
  </define>

</grammar>
